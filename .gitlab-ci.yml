include:
  - template: Dependency-Scanning.gitlab-ci.yml

stages:
  - test
  - release

release:
  stage: release
  image: debian:bullseye # for debhelper 13
  script:
    - apt-get -y update
    - apt-get -y install curl gnupg2 software-properties-common debhelper fakeroot
    - curl https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | apt-key add -
    - add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/
    - apt-get update
    - apt-get -y install adoptopenjdk-8-hotspot
    - export LC_ALL=C.UTF-8
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./gradlew
    - ./gradlew --no-daemon assemble
    - sed -i -- "s/\${version}/$CI_COMMIT_TAG/g" installer/linux/moasdawiki.sh
    - cd installer/linux
    - fakeroot debian/rules binary
  artifacts:
    expire_in: never
    paths:
      - build/distributions/*.zip
      - installer/*.deb
  only:
    - tags

test:
  stage: test
  image: java:8-jdk
  script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./gradlew
    - ./gradlew --no-daemon check
  artifacts:
    expire_in: 1 week
    paths:
      - build
    reports:
      junit: build/reports/tests/test/junitreports/*
